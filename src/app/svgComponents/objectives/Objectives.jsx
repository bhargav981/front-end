import React, { Component } from 'react';
import styles from './objectives.module.sass';
import applyWrappers from 'wrappers/ComponentWrapper';
import { checkIfPresent } from 'util/utilFunctions';

class Objectives extends Component {

    render() {
        const skin = this.props.skinGuide.globalProfiles.palette
        let color = skin.white;
        if (checkIfPresent(this.props.svgColor)) {
            color = this.props.svgColor;
        }
        return (
            <div styleName="main-component">
                <svg width="100%" height="100%" viewBox="0 0 13 13" fill="none">
                    <path d="M0.96199 10.8714C0.979388 10.8934 0.988854 10.9206 0.988854 10.9487C0.988854 10.9767 0.979388 11.0039 0.96199 11.0259L0.359989 11.7869C0.316864 11.8381 0.284465 11.8975 0.264713 11.9615C0.244961 12.0254 0.238259 12.0927 0.245004 12.1593C0.25175 12.2259 0.271805 12.2905 0.303981 12.3492C0.336157 12.408 0.379797 12.4596 0.432314 12.5011C0.484831 12.5427 0.545154 12.5732 0.609705 12.591C0.674255 12.6088 0.741719 12.6134 0.808094 12.6046C0.874469 12.5958 0.938402 12.5738 0.996102 12.5398C1.0538 12.5059 1.10409 12.4607 1.14399 12.4069L1.66999 11.7424C1.6901 11.7171 1.71927 11.7005 1.75135 11.6962C1.78343 11.6919 1.81592 11.7002 1.84199 11.7194C2.63056 12.3021 3.58846 12.6102 4.56889 12.5964C5.54932 12.5826 6.49816 12.2476 7.26999 11.6429C7.29494 11.6231 7.32652 11.6137 7.35823 11.6165C7.38994 11.6193 7.41938 11.6341 7.44049 11.6579L8.12849 12.4294C8.21764 12.5269 8.34136 12.5857 8.47325 12.5933C8.60514 12.6008 8.73477 12.5566 8.83449 12.4699C8.93341 12.3817 8.99329 12.2579 9.00098 12.1256C9.00867 11.9934 8.96353 11.8634 8.87549 11.7644L8.12549 10.9219C8.10654 10.9005 8.09551 10.8732 8.09423 10.8446C8.09296 10.8161 8.10152 10.7879 8.11849 10.7649C8.65547 10.0425 8.96225 9.17494 8.99882 8.27553C9.03538 7.37612 8.80004 6.48656 8.32349 5.7229C8.31312 5.70656 8.29918 5.69279 8.28273 5.68261C8.26627 5.67243 8.24771 5.66612 8.22846 5.66415C8.20921 5.66218 8.18976 5.66459 8.17158 5.67122C8.1534 5.67784 8.13696 5.68851 8.12349 5.7024L7.30199 6.5264C7.28368 6.54477 7.27176 6.56853 7.26798 6.59419C7.2642 6.61985 7.26876 6.64604 7.28099 6.6689C7.63413 7.35095 7.72496 8.1388 7.53629 8.88331C7.34761 9.62782 6.89253 10.2773 6.25718 10.7089C5.62183 11.1404 4.85031 11.324 4.08868 11.225C3.32705 11.1259 2.62816 10.7511 2.12431 10.1714C1.62046 9.59173 1.34663 8.84744 1.35465 8.07943C1.36266 7.31143 1.65197 6.57302 2.16781 6.00397C2.68364 5.43493 3.3902 5.07476 4.15374 4.99163C4.91727 4.90851 5.68479 5.1082 6.31099 5.5529C6.32576 5.56344 6.33807 5.57706 6.34705 5.59282C6.35603 5.60859 6.36147 5.62612 6.36299 5.6442C6.36451 5.66228 6.36208 5.68047 6.35586 5.69752C6.34965 5.71456 6.33979 5.73005 6.32699 5.7429L5.96499 6.1049C5.94456 6.12526 5.91771 6.13793 5.88901 6.14075C5.8603 6.14358 5.8315 6.13639 5.80749 6.1204C5.54211 5.94201 5.24304 5.81978 4.92868 5.76123C4.61432 5.70267 4.2913 5.70903 3.97949 5.7799C3.5669 5.87307 3.18667 6.07471 2.87808 6.364C2.56949 6.65328 2.34374 7.01971 2.22415 7.42543C2.10456 7.83115 2.09547 8.26145 2.19782 8.67185C2.30016 9.08226 2.51023 9.4579 2.80633 9.75996C3.10242 10.062 3.4738 10.2795 3.88208 10.3901C4.29037 10.5006 4.72076 10.5001 5.12879 10.3886C5.53681 10.2771 5.90767 10.0587 6.20305 9.75595C6.49843 9.45319 6.70761 9.07705 6.80899 8.6664C6.91836 8.22478 6.89752 7.76094 6.74899 7.3309C6.74147 7.31119 6.72911 7.29367 6.71306 7.27997C6.69701 7.26627 6.67777 7.25683 6.65712 7.2525C6.63646 7.24817 6.61505 7.24909 6.59485 7.25519C6.57465 7.26129 6.5563 7.27237 6.54149 7.2874L5.48249 8.3469C5.46828 8.36074 5.45779 8.37794 5.45199 8.3969C5.39649 8.57337 5.29313 8.73099 5.1534 8.85222C5.01367 8.97346 4.84305 9.05356 4.66052 9.08361C4.47799 9.11367 4.29069 9.0925 4.11947 9.02246C3.94825 8.95243 3.79981 8.83627 3.69066 8.68691C3.58151 8.53755 3.51594 8.36084 3.50122 8.17644C3.48651 7.99203 3.52323 7.80716 3.60731 7.64238C3.69139 7.4776 3.81954 7.33938 3.97748 7.24308C4.13543 7.14678 4.317 7.09618 4.50199 7.0969C4.56116 7.09699 4.62021 7.10218 4.67849 7.1124C4.7009 7.11656 4.72175 7.12674 4.73881 7.14184C4.75587 7.15695 4.7685 7.17642 4.77533 7.19816C4.78217 7.2199 4.78296 7.24309 4.77761 7.26524C4.77227 7.2874 4.76099 7.30768 4.74499 7.3239L4.30199 7.7669C4.26716 7.80169 4.23952 7.843 4.22067 7.88847C4.20182 7.93394 4.19211 7.98268 4.19211 8.0319C4.19211 8.08113 4.20182 8.12987 4.22067 8.17534C4.23952 8.22081 4.26716 8.26212 4.30199 8.2969C4.37314 8.36573 4.46825 8.40421 4.56724 8.40421C4.66623 8.40421 4.76134 8.36573 4.83249 8.2969L8.49549 4.6334C8.51901 4.61002 8.55083 4.5969 8.58399 4.5969H10.252C10.3148 4.59697 10.3753 4.57341 10.4215 4.5309L11.9215 3.1524C11.9535 3.12297 11.9772 3.0857 11.9904 3.04428C12.0036 3.00286 12.0057 2.95872 11.9966 2.91622C11.9875 2.87372 11.9675 2.83432 11.9386 2.80191C11.9096 2.7695 11.8727 2.7452 11.8315 2.7314L10.4185 2.2604C10.4002 2.25416 10.3835 2.2438 10.3698 2.2301C10.3561 2.2164 10.3457 2.19974 10.3395 2.1814L9.86799 0.767904C9.85423 0.726597 9.82993 0.689599 9.79748 0.660572C9.76503 0.631544 9.72557 0.611493 9.68299 0.602404C9.6404 0.593603 9.59627 0.595927 9.55484 0.609151C9.51342 0.622376 9.4761 0.646055 9.44649 0.677904L8.06749 2.1779C8.02529 2.22406 8.00191 2.28436 8.00199 2.3469V4.0149C8.00178 4.04803 7.98869 4.07977 7.96549 4.1034L7.48499 4.5839C7.46314 4.60556 7.43408 4.6184 7.40336 4.61997C7.37265 4.62153 7.34243 4.61172 7.31849 4.5924C6.45856 3.89887 5.37338 3.54622 4.27002 3.60174C3.16666 3.65727 2.12237 4.1171 1.33641 4.89347C0.550456 5.66984 0.0778587 6.70842 0.00879862 7.81101C-0.0602614 8.9136 0.279051 10.003 0.96199 10.8714Z" fill={color}/>
                </svg>
            </div>
        );
    }
}



export default applyWrappers(Objectives, styles);
